let M = {
	ids: {don:{}, ka:{}, timing:{}},
	trackers: {don:{}, ka:{}},
	counters: {},
}

CH = import "chart.spwn"

M.ids.bar = 3b
M.ids.clearbar = 4b
M.ids.stopbar = 5b

M.ids.don.great = 5b
M.ids.don.good = 6b
M.ids.don.miss = 7b
M.ids.ka.great = 8b
M.ids.ka.good = 9b
M.ids.ka.miss = 10b
M.ids.timing.late = 11b
M.ids.timing.early = 12b

for note in ["don", "ka"] {
	for judgement in ["great", "good", "miss"] {
		M.trackers[note][judgement] = counter(M.ids[note][judgement].create_tracker_item(CH.ids[note]))
	}
	for time in ["early", "late"] {
		M.trackers[note][time] = counter(M.ids.timing[time].create_tracker_item(CH.ids[note]))
	}
}

M.counters.great = counter(3i)
M.counters.good = counter(4i)
M.counters.miss = counter(5i)
M.counters.total = counter(6i)
M.counters.max = counter(7i)
M.counters.combo = counter(1i)
M.counters.maxcombo = counter(2i)

update_combo = () {
	M.counters.combo++
	if (M.counters.combo > M.counters.maxcombo) {
		M.counters.maxcombo = M.counters.combo
	}
}

register = (judge:@string) {
	if ("miss" in judge) {
		M.counters.miss++
		M.counters.combo = 0
	} else if ("good" in judge) {
		M.counters.good++
		M.counters.total += 2
	} else if ("great" in judge) {
		M.counters.great++
		M.counters.total += 3
	} else { /* what */ }
	if (!("miss" in judge)) {update_combo()}
}

check_don = () { return (M.trackers.don.miss >= 1 || M.trackers.don.good >= 1) }
check_ka = () { return (M.trackers.ka.miss >= 1 || M.trackers.ka.good >= 1) }

/* PLAN:
 * - check non-miss left-to-right: /notelock lol/
 *   - first check normal
 *   - then check cross [todo: add this later]
 * - check miss click
 */
M.input_don = !{
	if (M.trackers.don.late >= 1 && check_don()) {
		if (M.trackers.ka.miss >= 1) { register("miss_late") }
		else /* good */ { register("good_late") }
	} else if (M.trackers.don.great >= 1) {
		register("great")
	} else if (M.trackers.don.early >= 1 && check_don()) {
		if (M.trackers.ka.miss >= 1) { register("miss_early") }
		else /* good */ { register("good_early") }
	} else { /* drop input */ }
}

M.input_ka = !{
	if (M.trackers.don.late >= 1 && check_ka()) {
		if (M.trackers.ka.miss >= 1) { register("miss_late") }
		else /* good */ { register("good_late") }
	} else if (M.trackers.ka.great >= 1) {
		register("great")
	} else if (M.trackers.don.early >= 1 && check_ka()) {
		if (M.trackers.ka.miss >= 1) { register("miss_early") }
		else /* good */ { register("good_early") }
	} else { /* drop input */ }
}

return M
